-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.anuncios
(
    id_anuncio serial NOT NULL,
    fk_id_inmueble integer NOT NULL,
    fk_id_periodico integer NOT NULL,
    fecha_publicacion date NOT NULL,
    coste_economico numeric(10, 2) NOT NULL,
    CONSTRAINT anuncios_pkey PRIMARY KEY (id_anuncio)
);

CREATE TABLE IF NOT EXISTS public.inmuebles
(
    id_inmueble serial NOT NULL,
    calle character varying(50) COLLATE pg_catalog."default" NOT NULL,
    numero character varying(20) COLLATE pg_catalog."default" NOT NULL,
    ciudad character varying(50) COLLATE pg_catalog."default" NOT NULL,
    tipo_inmueble character varying(50) COLLATE pg_catalog."default" NOT NULL,
    numero_habitaciones integer NOT NULL,
    precio_mensual numeric(10, 2) NOT NULL,
    fk_id_propietario integer NOT NULL,
    fk_id_empleado_responsable integer,
    CONSTRAINT inmuebles_pkey PRIMARY KEY (id_inmueble)
);

CREATE TABLE IF NOT EXISTS public.empleados
(
    id_empleado serial NOT NULL,
    fk_id_oficina integer NOT NULL,
    nombre character varying(50) COLLATE pg_catalog."default" NOT NULL,
    direccion character varying(120) COLLATE pg_catalog."default" NOT NULL,
    telefono character varying(20) COLLATE pg_catalog."default",
    dni character varying(20) COLLATE pg_catalog."default" NOT NULL,
    fecha_nacimiento date NOT NULL,
    puesto character varying(50) COLLATE pg_catalog."default" NOT NULL,
    salario_anual numeric(12, 2) NOT NULL,
    fecha_ingreso date NOT NULL,
    CONSTRAINT empleados_pkey PRIMARY KEY (id_empleado),
    CONSTRAINT empleados_dni_key UNIQUE (dni)
);

CREATE TABLE IF NOT EXISTS public.oficinas
(
    id_oficina serial NOT NULL,
    calle character varying(50) COLLATE pg_catalog."default" NOT NULL,
    numero character varying(20) COLLATE pg_catalog."default" NOT NULL,
    ciudad character varying(50) COLLATE pg_catalog."default" NOT NULL,
    telefono character varying(20) COLLATE pg_catalog."default" NOT NULL,
    fax character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT oficinas_pkey PRIMARY KEY (id_oficina)
);

CREATE TABLE IF NOT EXISTS public.directores
(
    fk_id_empleado integer NOT NULL,
    fk_id_oficina integer NOT NULL,
    fecha_inicio_cargo date NOT NULL,
    pago_anual_vehiculo numeric(12, 2) NOT NULL,
    bonificacion_mensual numeric(12, 2),
    CONSTRAINT directores_pkey PRIMARY KEY (fk_id_empleado),
    CONSTRAINT directores_fk_id_oficina_key UNIQUE (fk_id_oficina)
);

CREATE TABLE IF NOT EXISTS public.inquilinos
(
    id_inquilino serial NOT NULL,
    nombre character varying(50) COLLATE pg_catalog."default" NOT NULL,
    direccion character varying(120) COLLATE pg_catalog."default" NOT NULL,
    telefono character varying(20) COLLATE pg_catalog."default",
    tipo_inmueble_preferido character varying(50) COLLATE pg_catalog."default" NOT NULL,
    importe_maximo_mensual numeric(10, 2) NOT NULL,
    fecha date NOT NULL,
    comentarios text COLLATE pg_catalog."default",
    fk_id_empleado_asignado integer NOT NULL,
    CONSTRAINT inquilinos_pkey PRIMARY KEY (id_inquilino)
);

CREATE TABLE IF NOT EXISTS public.visitas
(
    id_visita serial NOT NULL,
    fk_id_inmueble integer NOT NULL,
    fk_id_inquilino integer NOT NULL,
    fecha date NOT NULL,
    comentarios text COLLATE pg_catalog."default",
    CONSTRAINT visitas_pkey PRIMARY KEY (id_visita)
);

CREATE TABLE IF NOT EXISTS public.contratos
(
    id_contrato serial NOT NULL,
    fk_id_inmueble integer NOT NULL,
    fk_id_inquilino integer NOT NULL,
    fk_id_empleado integer NOT NULL,
    importe_mensual numeric(10, 2) NOT NULL,
    metodo_pago character varying(50) COLLATE pg_catalog."default" NOT NULL,
    importe_deposito numeric(10, 2) NOT NULL,
    deposito_realizado boolean NOT NULL DEFAULT false,
    fecha_inicio date NOT NULL,
    fecha_finalizacion date NOT NULL,
    duracion_meses integer NOT NULL,
    CONSTRAINT contratos_pkey PRIMARY KEY (id_contrato)
);

CREATE TABLE IF NOT EXISTS public.inspecciones
(
    id_inspeccion serial NOT NULL,
    fk_id_empleado integer NOT NULL,
    fk_id_inmueble integer NOT NULL,
    fecha date NOT NULL,
    comentarios text COLLATE pg_catalog."default",
    CONSTRAINT inspecciones_pkey PRIMARY KEY (id_inspeccion)
);

CREATE TABLE IF NOT EXISTS public.parientes
(
    id_pariente serial NOT NULL,
    fk_id_empleado integer NOT NULL,
    nombre character varying(50) COLLATE pg_catalog."default",
    relacion character varying(20) COLLATE pg_catalog."default",
    direccion character varying(120) COLLATE pg_catalog."default",
    telefono character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT parientes_pkey PRIMARY KEY (id_pariente),
    CONSTRAINT parientes_fk_id_empleado_key UNIQUE (fk_id_empleado)
);

CREATE TABLE IF NOT EXISTS public.administrativos
(
    fk_id_empleado integer NOT NULL,
    velocidad_escritura integer NOT NULL,
    CONSTRAINT administrativos_pkey PRIMARY KEY (fk_id_empleado)
);

CREATE TABLE IF NOT EXISTS public.supervisores
(
    fk_id_empleado integer NOT NULL,
    CONSTRAINT supervisores_pkey PRIMARY KEY (fk_id_empleado)
);

CREATE TABLE IF NOT EXISTS public.propietarios
(
    id_propietario serial NOT NULL,
    direccion character varying(120) COLLATE pg_catalog."default" NOT NULL,
    telefono character varying(20) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT propietarios_pkey PRIMARY KEY (id_propietario)
);

CREATE TABLE IF NOT EXISTS public.particulares
(
    fk_id_propietario integer NOT NULL,
    nombre character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT particulares_pkey PRIMARY KEY (fk_id_propietario)
);

CREATE TABLE IF NOT EXISTS public.empresas
(
    fk_id_propietario integer NOT NULL,
    nombre_comercial character varying(50) COLLATE pg_catalog."default" NOT NULL,
    tipo_empresa character varying(50) COLLATE pg_catalog."default",
    contacto character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT empresas_pkey PRIMARY KEY (fk_id_propietario)
);

CREATE TABLE IF NOT EXISTS public.periodicos
(
    id_periodico serial NOT NULL,
    nombre character varying(50) COLLATE pg_catalog."default" NOT NULL,
    direccion character varying(120) COLLATE pg_catalog."default" NOT NULL,
    telefono character varying(20) COLLATE pg_catalog."default",
    fax character varying(20) COLLATE pg_catalog."default",
    contacto character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT periodicos_pkey PRIMARY KEY (id_periodico)
);

ALTER TABLE IF EXISTS public.anuncios
    ADD CONSTRAINT fk_anuncios_inmuebles FOREIGN KEY (fk_id_inmueble)
    REFERENCES public.inmuebles (id_inmueble) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.anuncios
    ADD CONSTRAINT fk_anuncios_periodicos FOREIGN KEY (fk_id_periodico)
    REFERENCES public.periodicos (id_periodico) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.inmuebles
    ADD CONSTRAINT fk_inmuebles_empleados FOREIGN KEY (fk_id_empleado_responsable)
    REFERENCES public.empleados (id_empleado) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.inmuebles
    ADD CONSTRAINT fk_inmuebles_propietarios FOREIGN KEY (fk_id_propietario)
    REFERENCES public.propietarios (id_propietario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.empleados
    ADD CONSTRAINT fk_empleados_oficinas FOREIGN KEY (fk_id_oficina)
    REFERENCES public.oficinas (id_oficina) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.directores
    ADD CONSTRAINT fk_directores_empleados FOREIGN KEY (fk_id_empleado)
    REFERENCES public.empleados (id_empleado) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS directores_pkey
    ON public.directores(fk_id_empleado);


ALTER TABLE IF EXISTS public.directores
    ADD CONSTRAINT fk_directores_oficinas FOREIGN KEY (fk_id_oficina)
    REFERENCES public.oficinas (id_oficina) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS directores_fk_id_oficina_key
    ON public.directores(fk_id_oficina);


ALTER TABLE IF EXISTS public.inquilinos
    ADD CONSTRAINT fk_inquilinos_empleados FOREIGN KEY (fk_id_empleado_asignado)
    REFERENCES public.empleados (id_empleado) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.visitas
    ADD CONSTRAINT fk_visitas_inmuebles FOREIGN KEY (fk_id_inmueble)
    REFERENCES public.inmuebles (id_inmueble) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.visitas
    ADD CONSTRAINT fk_visitas_inquilinos FOREIGN KEY (fk_id_inquilino)
    REFERENCES public.inquilinos (id_inquilino) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.contratos
    ADD CONSTRAINT fk_contratos_empleados FOREIGN KEY (fk_id_empleado)
    REFERENCES public.empleados (id_empleado) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.contratos
    ADD CONSTRAINT fk_contratos_inmuebles FOREIGN KEY (fk_id_inmueble)
    REFERENCES public.inmuebles (id_inmueble) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.contratos
    ADD CONSTRAINT fk_contratos_inquilinos FOREIGN KEY (fk_id_inquilino)
    REFERENCES public.inquilinos (id_inquilino) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.inspecciones
    ADD CONSTRAINT fk_inspecciones_empleados FOREIGN KEY (fk_id_empleado)
    REFERENCES public.empleados (id_empleado) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.inspecciones
    ADD CONSTRAINT fk_inspecciones_inmuebles FOREIGN KEY (fk_id_inmueble)
    REFERENCES public.inmuebles (id_inmueble) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.parientes
    ADD CONSTRAINT fk_parientes_empleados FOREIGN KEY (fk_id_empleado)
    REFERENCES public.empleados (id_empleado) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS parientes_fk_id_empleado_key
    ON public.parientes(fk_id_empleado);


ALTER TABLE IF EXISTS public.administrativos
    ADD CONSTRAINT fk_administrativos_empleados FOREIGN KEY (fk_id_empleado)
    REFERENCES public.empleados (id_empleado) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS administrativos_pkey
    ON public.administrativos(fk_id_empleado);


ALTER TABLE IF EXISTS public.supervisores
    ADD CONSTRAINT fk_supervisores_empleados FOREIGN KEY (fk_id_empleado)
    REFERENCES public.empleados (id_empleado) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS supervisores_pkey
    ON public.supervisores(fk_id_empleado);


ALTER TABLE IF EXISTS public.particulares
    ADD CONSTRAINT fk_particulares_propietarios FOREIGN KEY (fk_id_propietario)
    REFERENCES public.propietarios (id_propietario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS particulares_pkey
    ON public.particulares(fk_id_propietario);


ALTER TABLE IF EXISTS public.empresas
    ADD CONSTRAINT fk_empresas_propietarios FOREIGN KEY (fk_id_propietario)
    REFERENCES public.propietarios (id_propietario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS empresas_pkey
    ON public.empresas(fk_id_propietario);

END;